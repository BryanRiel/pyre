// -*- C++ -*-
// -*- coding: utf-8 -*-
//
// michael a.g. aïvázis
// orthologue
// (c) 1998-2016 all rights reserved
//

// code guard
#if !defined(pyre_geometry_Slice_icc)
#error This header file contains implementation details of class pyre::geometry::Slice
#endif


// meta-methods
template <typename tileT>
pyre::geometry::Slice<tileT>::
Slice(const tile_type & tile, const order_type & order) :
    _tile {tile},
    _low {}, // set everything to 0
    _high { tile.shape() },
    _order {order}
{}

template <typename tileT>
pyre::geometry::Slice<tileT>::
Slice(const tile_type & tile,
      const index_type & low, const index_type & high,
      const order_type & order) :
    _tile {tile},
    _low { low }, // set everything to 0
    _high { high },
    _order {order}
{}


// interface
template <typename tileT>
const auto &
pyre::geometry::Slice<tileT>::
low() const {
    // easy
    return _low;
}


template <typename tileT>
const auto &
pyre::geometry::Slice<tileT>::
high() const {
    // easy
    return _high;
}


template <typename tileT>
const auto &
pyre::geometry::Slice<tileT>::
order() const {
    // easy
    return _order;
}


template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
offset(const index_type & index) const {
    // ask the tile
    return _tile.offset(index);
}


template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
index(size_type offset) const {
    // ask the tile
    return _tile.index(offset);
}


template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
operator[](const index_type & index) const {
    // ask the tile
    return offset(index);
}


template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
operator[](size_type offset) const {
    // ask the tile
    return index(offset);
}

template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
begin() const {
    // easy enough...
    return iterator_type{ _low, _high, _order };
}


template <typename tileT>
auto
pyre::geometry::Slice<tileT>::
end() const {
    // easy enough...
    return iterator_type{ _high, _high, _order };
}


// end of file
