// -*- C++ -*-
// 
// michael a.g. aïvázis
// california institute of technology
// (c) 1998-2011 all rights reserved
// 

#if !defined(pyre_journal_Channel_icc)
#error This header file contains implementation details of class Channel
#else


// accessors
template <typename Severity, bool DefaultState>
typename pyre::journal::Channel<Severity, DefaultState>::state_t
pyre::journal::Channel<Severity, DefaultState>::
isActive() const
{
    return _inventory.state();
}


template <typename Severity, bool DefaultState>
const typename pyre::journal::Channel<Severity, DefaultState>::device_t &
pyre::journal::Channel<Severity, DefaultState>::
device() const
{
    return _inventory.device();
}


// mutators
template <typename Severity, bool DefaultState>
void
pyre::journal::Channel<Severity, DefaultState>::
activate()
{
    _inventory.activate();
}


template <typename Severity, bool DefaultState>
void
pyre::journal::Channel<Severity, DefaultState>::
deactivate()
{
    _inventory.deactivate();
}


template <typename Severity, bool DefaultState>
void
pyre::journal::Channel<Severity, DefaultState>::
device(typename Channel::device_t * device)
{
    _inventory.device(device);
}


// destructor
template <typename Severity, bool DefaultState>
pyre::journal::Channel<Severity, DefaultState>::
~Channel()
{}


// the default constructor
template <typename Severity, bool DefaultState>
pyre::journal::Channel<Severity, DefaultState>::
Channel(typename Channel<Severity, DefaultState>::string_t name) :
    _name(name),
    _inventory(_index.lookup(name))
{}


# endif

// end of file
