// -*- C++ -*-
// 
// michael a.g. aïvázis
// california institute of technology
// (c) 1998-2011 all rights reserved
// 

#if !defined(pyre_journal_Diagnostic_icc)
#error This header file contains implementation details of class Diagnostic
#else


// interface
template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
record()
{
    return static_cast<Severity *>(this)->record();
}

template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
newline()
{
    return static_cast<Severity *>(this)->newline();
}


template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
print(const char * text)
{
    return static_cast<Severity *>(this)->print(text);
}


// the destructor
template <typename Severity>
pyre::journal::Diagnostic<Severity>::
~Diagnostic()
{}


// the default constructor
template <typename Severity>
pyre::journal::Diagnostic<Severity>::
Diagnostic()
{}


// the copy constructor
template <typename Severity>
pyre::journal::Diagnostic<Severity>::
Diagnostic(const pyre::journal::Diagnostic<Severity> & other)
{}


// operator =
template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
operator = (const pyre::journal::Diagnostic<Severity> & other)
{
    // skip assignment to self
    if (&other != this) {
        // otherwise, copy the data
    }
    // and return me
    return *this;
}


# endif

// end of file
