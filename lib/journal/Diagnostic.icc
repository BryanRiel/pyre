// -*- C++ -*-
// 
// michael a.g. aïvázis
// california institute of technology
// (c) 1998-2011 all rights reserved
// 

#if !defined(pyre_journal_Diagnostic_icc)
#error This header file contains implementation details of class Diagnostic
#else


// the injection operator
template <typename Severity, typename item_t>
pyre::journal::Diagnostic<Severity> &
operator << (pyre::journal::Diagnostic<Severity> & channel, item_t item) {
    return channel.inject(item);
}


// interface
// record an entry into the journal
template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
record()
{
    return *this;
}


// add a newline in the message stream
template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
newline()
{
    // add the contents of the buffer to the message page
    _page.push_back(_buffer.str());
    // clear out the buffer contents
    _buffer.str(string_t());
    // and return
    return *this;
}


// decorate with (key, value) meta data
template <typename Severity>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>::
setattr(
        pyre::journal::Diagnostic<Severity>::string_t key,
        pyre::journal::Diagnostic<Severity>::string_t value
        )
{
    _metadata[key] = value;
    return *this;
}


// add an item to the message stream
template <typename Severity>
template <typename item_t>
pyre::journal::Diagnostic<Severity> &
pyre::journal::Diagnostic<Severity>:: inject(item_t item)
{
    _buffer << item;
    return *this;
}



// the destructor
template <typename Severity>
pyre::journal::Diagnostic<Severity>::
~Diagnostic()
{}


// the default constructor
template <typename Severity>
pyre::journal::Diagnostic<Severity>::
Diagnostic(
           pyre::journal::Diagnostic<Severity>::string_t severity,
           pyre::journal::Diagnostic<Severity>::string_t name
           ) :
    _page(),
    _buffer(),
    _metadata()
{
    setattr("channel", name);
    setattr("severity", severity);
}


# endif

// end of file
